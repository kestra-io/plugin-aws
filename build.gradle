plugins {
    id 'java-library'
    id "idea"
    id "com.adarshr.test-logger" version "4.0.0"
    id "com.github.johnrengelman.shadow" version "8.1.1"
    id 'ru.vyarus.java-lib' version '2.4.0'
    id 'ru.vyarus.github-info' version '1.5.0'
    id 'signing'
    id "io.github.gradle-nexus.publish-plugin" version "1.3.0"
    id "com.github.ben-manes.versions" version "0.51.0"
    id 'net.researchgate.release' version '3.0.2'
}

def isBuildSnapshot = version.toString().endsWith("-SNAPSHOT")

repositories {
    mavenLocal()
    mavenCentral()
    if (isBuildSnapshot) {
        maven { url "https://s01.oss.sonatype.org/content/repositories/snapshots/" }
    }
}

sourceCompatibility = 17
targetCompatibility = 17

group "io.kestra.plugin"
description 'AWS plugin for Kestra'


tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
    options.compilerArgs.add("-parameters")
}

dependencies {
    // lombok
    annotationProcessor "org.projectlombok:lombok:$lombokVersion"
    compileOnly "org.projectlombok:lombok:$lombokVersion"

    // micronaut
    // micronaut
    annotationProcessor platform("io.micronaut.platform:micronaut-platform:$micronautVersion")
    annotationProcessor "io.micronaut:micronaut-inject-java"
    annotationProcessor "io.micronaut.validation:micronaut-validation-processor"

    compileOnly platform("io.micronaut.platform:micronaut-platform:$micronautVersion")
    compileOnly "io.micronaut:micronaut-inject"
    compileOnly "io.micronaut.validation:micronaut-validation"
    compileOnly "io.micronaut.reactor:micronaut-reactor"

    // kestra
    compileOnly group: "io.kestra", name: "core", version: kestraVersion
    implementation group: "io.kestra.plugin", name: "plugin-script", version: kestraVersion

    // AWS libs: versions are managed by the Micronaut BOM
    api 'software.amazon.awssdk:s3'
    api 'software.amazon.awssdk:s3-transfer-manager'
    api 'software.amazon.awssdk.crt:aws-crt:0.29.10' //used by s3-transfer-manager
    api 'software.amazon.awssdk:apache-client'
    api 'software.amazon.awssdk:dynamodb'
    api 'software.amazon.awssdk:sns'
    api 'software.amazon.awssdk:sqs'
    api 'software.amazon.awssdk:athena'
    api 'software.amazon.awssdk:lambda'
    api 'software.amazon.awssdk:eventbridge'
    api 'software.amazon.awssdk:kinesis'
    api 'software.amazon.awssdk:sts'
    api 'software.amazon.awssdk:ecr'
}


/**********************************************************************************************************************\
 * Test
 **********************************************************************************************************************/
test {
    useJUnitPlatform()
}

testlogger {
    theme "mocha-parallel"
    showExceptions true
    showFullStackTraces true
    showStandardStreams true
    showPassedStandardStreams false
    showSkippedStandardStreams true
}

dependencies {
    // lombok
    testAnnotationProcessor "org.projectlombok:lombok:$lombokVersion"
    testCompileOnly "org.projectlombok:lombok:$lombokVersion"

    testAnnotationProcessor platform("io.micronaut.platform:micronaut-platform:$micronautVersion")
    testAnnotationProcessor "io.micronaut:micronaut-inject-java"
    testAnnotationProcessor "io.micronaut.validation:micronaut-validation-processor"

    testImplementation platform("io.micronaut.platform:micronaut-platform:$micronautVersion")
    testImplementation "io.micronaut.test:micronaut-test-junit5"
    testImplementation "io.micronaut.reactor:micronaut-reactor"

    // test
    testImplementation "org.junit.jupiter:junit-jupiter-engine"
    testImplementation "org.hamcrest:hamcrest:2.2"
    testImplementation "org.hamcrest:hamcrest-library:2.2"
    testImplementation 'org.mockito:mockito-junit-jupiter'

    testImplementation group: "io.kestra", name: "core", version: kestraVersion
    testImplementation group: "io.kestra", name: "storage-local", version: kestraVersion
    testImplementation group: "io.kestra", name: "runner-memory", version: kestraVersion
    testImplementation group: "io.kestra", name: "repository-memory", version: kestraVersion

    // testcontainers
    testImplementation "org.testcontainers:testcontainers:1.19.0"
    testImplementation "org.testcontainers:junit-jupiter:1.19.0"
    testImplementation "org.testcontainers:localstack:1.19.0"
    // Localstack module misses SDK v1 classes that are mandatory, see https://github.com/testcontainers/testcontainers-java/issues/1442#issuecomment-694342883
    testImplementation 'com.amazonaws:aws-java-sdk-s3:1.12.520'
}

/**********************************************************************************************************************\
 * Publish
 **********************************************************************************************************************/
nexusPublishing {
    repositoryDescription = "${project.group}:${rootProject.name}:${project.version}"
    useStaging = !isBuildSnapshot
    repositories {
        sonatype {
            nexusUrl.set(uri("https://s01.oss.sonatype.org/service/local/"))
            snapshotRepositoryUrl.set(uri("https://s01.oss.sonatype.org/content/repositories/snapshots/"))
        }
    }
}

jar {
    manifest {
        attributes(
                "X-Kestra-Name": project.name,
                "X-Kestra-Title": "AWS",
                "X-Kestra-Group": project.group + ".aws",
                "X-Kestra-Description": project.description,
                "X-Kestra-Version": project.version
        )
    }
}

pom {
    developers {
        developer {
            id "tchiotludo"
            name "Ludovic Dehon"
        }
    }
}

shadowJar {
    archiveClassifier.set(null)
    mergeServiceFiles()
}

github {
    user 'kestra-io'
    license 'Apache'
}


/**********************************************************************************************************************\
 * Version
 **********************************************************************************************************************/
release {
    preCommitText = 'chore(version):'
    preTagCommitMessage = 'update to version'
    tagCommitMessage = 'tag version'
    newVersionCommitMessage = 'update snapshot version'
    tagTemplate = 'v${version}'
    buildTasks = ['classes']
    git {
        requireBranch.set('master')
    }
}

/**********************************************************************************************************************\
 * Dev
 **********************************************************************************************************************/
idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}
